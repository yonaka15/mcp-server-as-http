services:
  mcp-server-as-http:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Override default environment variables here
      - HTTP_API_KEY=${HTTP_API_KEY:-your-secret-api-key-here}
      - DISABLE_AUTH=${DISABLE_AUTH:-false}
      - MCP_CONFIG_FILE=mcp_servers.config.json
      - MCP_SERVER_NAME=${MCP_SERVER_NAME:-github}
      - RUST_LOG=${RUST_LOG:-info}
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
    volumes:
      # Mount config file for easy development changes
      - ./mcp_servers.config.json:/app/mcp_servers.config.json:ro
      # Optional: mount custom .env file
      - ./.env:/app/.env:ro
      # Mount Docker socket for Docker-in-Docker
      - /var/run/docker.sock:/var/run/docker.sock:rw
    user: root  # Temporarily run as root to access docker socket
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:3000/api/v1",
          "-X",
          "POST",
          "-H",
          "Content-Type: application/json",
          "-d",
          '{"command":"test"}',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Optional: Add a simple health check service
  health-check:
    image: curlimages/curl:latest
    depends_on:
      - mcp-server-as-http
    command: >
      sh -c "
        echo 'Waiting for mcp-server-as-http to be ready...' &&
        sleep 10 &&
        curl -f http://mcp-server-as-http:3000/api/v1 
          -X POST 
          -H 'Content-Type: application/json' 
          -d '{\"command\":\"test\"}' &&
        echo 'Health check passed!'
      "
    profiles:
      - health-check
